{"app": "package main\n\nfunc main() {\n    @\n}", "array": "var x [@n]@type ", "const": "const @name @type = @value ", "copy": "copy(@x, @y)", "date": "time.Date(@year, time.@month, @day, @hour, @minutes, @seconds, @millis, time.UTC),", "defer": "defer @", "for": "for @ {\n    @\n}", "for_map": "for @key, @value := range @map {\n    @\n} ", "for_range": "for _, value := range @array {\n    @\n} ", "fori": "for i := 0; i<@n; i++ {\n    @\n}", "func": "func @name(){\n    @\n}", "func_block": "func(){\n    @\n}()", "func_concurrency": "func @hilo(){\n    defer wg.Done()\n    @\n}", "func_handler": "func @peticion(w resp http.ResponseWriter, req *http.Request){\n    fmt.Fprint(resp, @stringResponse)\n}", "func_returns": "func @name(@arguments) (@returns){\n    @\n}", "hello_world": "package main\nimport \"fmt\"\n\nfunc main() {\n    fmt.Println(\"Hello, World\")\n}", "if": "if @ {\n    @\n}", "import": "import \"@\"", "import_alias": "import(\n    @alias \"@library\"\n)", "init": "func init(){\n    @\n}", "interface": "type @name interface{\n    @method() @return\n}", "len": "len(@)", "make": "make([]@type,@initial, @capacity)", "map": "@var :=make(map[string]string) ", "method": "func (p @type) Info(){\n    @\n}", "method_object": "func (p *@name) @name(){\n    @    \n}", "method_pointer": "func (p *@name) @name(){\n    @    \n}", "new_date": "time.Date(@year, time.@month, @day, @hour, @minutes, @seconds, @millis, time.UTC),", "new_struc_pointer": "&@Nombre{@field:@value}", "new_struct": "@Nombre{@field:@value}", "new_struct_pointer": "&@Nombre{@field:@value}", "panic": "panic(@function)", "print": "fmt.Println(\"@\")", "printf": "fmt.Printf(\"%@s\", @)", "read": "fmt.Scanf(\"%f\", &@var)", "slice": "@var:=[]@type{@}", "struct": "type @name struct{\n    @field @type\n}", "switch": "switch @ {\n    case @:@\n    default:@\n}", "test_function": "func Test@1function(t *testing.T) {\n    result = @1function()\n    if result!= @esperado {\n        t.Error(\"@mensaje\", result)\n    }\n}", "var": "var @name ", "var_string": "var @name string "}