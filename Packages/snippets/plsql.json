{"add_coluimn": "alter table @table add @columnName @type;", "add_column": "alter table @table add @columnName @type;", "addmonths": "ADD_MONTHS(SYSDATE, 6)", "all_sequences": "select * from all_sequences;", "alter_sequence": "ALTER SEQUENCE @sequence INCREMENT by 1;", "alter_table_add_constraint_foreign_key": "ALTER TABLE @TableName ADD CONSTRAINT @ConstraintName FOREIGN KEY (@ColumnName) REFERENCES @TableName(@ColumnName);", "alter_table_modify_column": "alter table @tabla modify (@column @type);", "avg": "AVG(@)", "begin": "BEGIN\n	@\nEND;\n/", "begin_exception": "DECLARE \n    nombre VARCHAR2(9);\nBEGIN\n    nombre:='';\n    DBMS_OUTPUT.PUT_LINE(nombre);\nexception\n    when value_error\n    then\n        DBMS_OUTPUT.PUT_LINE('error');\nEND;\n/", "borrar_todo_acreditacion": "DELETE FROM HIST_PROCEDIMIENTO;\nDELETE FROM HIST_INFECCION;\nDELETE FROM HIST_MORTALIDAD;\nDELETE FROM VAR_RESP_PROCEDIMIENTO;\nDELETE FROM VAR_RESP_MORTALIDAD;\nDELETE FROM VAR_RESP_INFECCION;\nDELETE FROM CAPILLA;\nDELETE FROM TBL_ISO;\nDELETE FROM TBL_ITU;\nDELETE FROM TBL_ITS;\nDELETE FROM TBL_NEUMONIA;\nDELETE FROM TBL_FLEBITIS;\nDELETE FROM MICRO_INFECCION;\nDELETE FROM PROCEDIMIENTO_INFECCION;\nDELETE FROM INFECCION;\nDELETE FROM PROCEDIMIENTOS;\nDELETE FROM PROCEDIMIENTO_QUIRURGICO;\nDELETE FROM COMPLICACION;\nDELETE FROM CAUSA_DIRECTA;\nDELETE FROM MORTALIDAD;\nDELETE FROM VAR_MODULO;\nDELETE FROM VAR_MODULO;\nDELETE FROM VARIABLE_VALOR;\nDELETE FROM VARIABLE;\nDELETE FROM HISTORIAL_INTEGRACION;\nDELETE FROM HISTORIAL_INT_MORT;\ncommit;", "borrar_todo_infeccion": "DELETE FROM HIST_INFECCION;\nDELETE FROM VAR_RESP_INFECCION;\nDELETE FROM TBL_ISO;\nDELETE FROM TBL_ITU;\nDELETE FROM TBL_ITS;\nDELETE FROM TBL_NEUMONIA;\nDELETE FROM TBL_FLEBITIS;\nDELETE FROM MICRO_INFECCION;\nDELETE FROM PROCEDIMIENTO_INFECCION;\nDELETE FROM INFECCION;\ncommit;", "cascade_constraints": "CASCADE CONSTRAINTS", "case": "CASE @\nWHEN @ THEN\n	@\nWHEN @ THEN\n	@\nELSE\n	@\nEND CASE;", "chage_port": "exec dbms_xdb.sethttpport(@port);", "change_port": "exec dbms_xdb.sethttpport(@port);", "check_between": "CHECK (@Column between 0 and 5)", "check_function": "check (@column = @function(@column))", "check_in": "CHECK (@Column in ('val1', 'val2'))", "check_upper": "check (@1column = upper(@1column))", "comment": "/*@*/", "commit": "COMMIT;", "connect": "CONNECT @user/@password;", "constant": "CONSTANT", "constraint_foreign_key": "CONSTRAINT @ConstraintName FOREIGN KEY (@Columns) REFERENCES @Table (@Columns)", "consulta": "SELECT MS_CAR_CAR.CAR_CODE, MS_CAR_CAR.CAR_NUMCAR, MS_CAR_CAR.CAR_NAME, MS_PO_PO.PO_CODE, MS_PO_PO.PO_NUMPO, MS_CAR_CAR.CAR_INITIAL_AMOUNT, MS_PO_PO.PO_REQUEST,SUM(MS_EA_EA.EA_EXECUTION) AS PO_EXECUTED\nFROM  MS_CAR_CAR LEFT JOIN MS_PO_PO ON MS_CAR_CAR.CAR_CODE=MS_PO_PO.PO_CODECAR LEFT JOIN MS_EA_EA ON MS_PO_PO.PO_CODE=MS_EA_EA.EA_CODEPO\nWHERE 1=1 AND MS_CAR_CAR.CAR_CODEADDRESS=1\nGROUP BY MS_PO_PO.PO_NUMPO, MS_PO_PO.PO_CODE,MS_PO_PO.PO_CODECAR, MS_PO_PO.PO_REQUEST, MS_CAR_CAR.CAR_NUMCAR, MS_CAR_CAR.CAR_NAME, MS_CAR_CAR.CAR_CODE, MS_CAR_CAR.CAR_INITIAL_AMOUNT\nORDER BY MS_CAR_CAR.CAR_NAME;", "continue": "CONTINUE @;", "continue_when": "CONTINUE WHEN @;", "countm": "COUNT(@)", "crear_usuario_administador": "insert into users (username, password, enabled) values ('dmolina', 'dmolina', 1);\ninsert into role_members (roles_id, id_usuario) \nselect 1, max(id) from users;", "create_directory_xml": "CREATE OR REPLACE DIRECTORY XMLDIR AS '@';", "create_function": "CREATE OR REPLACE FUNCTION @NAME(@ARGS)\n    RETURN @TYPE\nIS\n    RESULT @TYPE;\nBEGIN\n    @\n    RETURN RESULT;\nEND;\n/", "create_index": "CREATE INDEX @nombre ON @tabla(@columna) TABLESPACE @tablespace PCTFREE 5 STORAGE(INITIAL 10M);", "create_or_replace": "CREATE OR REPLACE @ProgramType\nAS\n    @\nEND;\n/", "create_package_body": "create or replace package body @name is\n    @\nend;", "create_package_header": "create or replace package @name is \n    function @name(@args) return @type;\nend;", "create_procedure": "CREATE OR REPLACE PROCEDURE @name\nIS\n    @name @type;\nBEGIN\n    @\nEND;\n/\n", "create_procedure_args": "CREATE OR REPLACE PROCEDURE @name(@parametro @VARCHAR2)\nIS\n    @nombre @number;\nBEGIN\n    @\nEND;\n/", "create_public_synonym": "CREATE PUBLIC SYNONYM @SINONIMO FOR @TABLA;", "create_replace_procedure": "CREATE OR REPLACE PROCEDURE @1proName\nIS\n    @2varname @type;\nBEGIN\n    @2varname := @valor;\n    DBMS_OUTPUT.PUT_LINE(@2varname);\nEND;\n/\n\nEXEC @1proName;\n", "create_replace_procedure_params": "CREATE OR REPLACE PROCEDURE @1procedureName(@param_in type)\nIS\n    @2varName @varType;\nBEGIN\n    @2varName := @varValue;\n    DBMS_OUTPUT.PUT_LINE(@2varName);\nEND;\n/\n\nEXEC @1procedureName(@param_in);\n\n", "create_role": "CREATE ROLE @ROLE;", "create_sequence": "CREATE SEQUENCE \"@name\"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE ;", "create_sinonimo": "CREATE PUBLIC SYNONYM @SINONIMO FOR @TABLA;", "create_table": "create table @name (@columns);", "create_table_seq_trigger": "create table @1table (\n    @\n);\n\nCREATE SEQUENCE \"@2sequence\" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE ;\n\nCREATE OR REPLACE TRIGGER \"@trigger\"\nBEFORE INSERT\nON @1table\nFOR EACH ROW\nBEGIN\n  SELECT @2sequence.NEXTVAL\n  INTO :NEW.ID\n  FROM DUAL;\nEND;", "create_tablespace": "CREATE TABLESPACE @TablespaceName DATAFILE '@ruta.dbf' SIZE 500M EXTENT MANAGEMENT LOCAL AUTOALLOCATE;", "create_trigger_before_insert": "CREATE OR REPLACE TRIGGER @triggerName BEFORE INSERT ON @table FOR EACH ROW\nBEGIN \n    @\nEND;\n/", "create_trigger_id": "ALTER TRIGGER \"SET_SCHEDULE_ID\" ENABLE;\n\nCREATE OR REPLACE TRIGGER \"@1name\"\nBEFORE INSERT\nON @table\nFOR EACH ROW\nBEGIN\n  SELECT @sequence.NEXTVAL\n  INTO :NEW.@ID\n  FROM DUAL;\nEND;\n\nALTER TRIGGER \"@1name\" ENABLE;", "create_user": "CREATE USER @username identified by @clave;", "create_view": "CREATE OR REPLACE VIEW @\nAS SELECT @ FROM @;", "createtable": "create table @name (@columns);", "cube": "GROUP BY CUBE(@)", "cursor": "CURSOR @NOMBRE IS SELECT * FROM @TABLA;", "declare": "DECLARE \n	@nombre @type;\nBEGIN\n	@nombre:=@;\nEND;\n/", "define": "DEFINE @=@;", "delete": "DELETE FROM @TABLE;", "describe": "DESCRIBE @;", "desviacion_estandar": "STDDEV(@)", "diconnect": "DISCONNECT;", "disconnect": "DISCONNECT;", "drop_column": "alter table @table drop column @column;", "drop_constraint": "ALTER TABLE @table DROP CONSTRAINT @ContraintName;", "drop_table": "drop table @table;", "ej_cursor": "DECLARE \n    CURSOR PRODUCTOS_ORDENADOS IS SELECT ID, NOMBRE FROM PRODUCTO ORDER BY ID;\n    ID PRODUCTO.ID%TYPE;\n    NOMBRE PRODUCTO.NOMBRE%TYPE;\nBEGIN\n    OPEN PRODUCTOS_ORDENADOS;\n    LOOP\n        FETCH PRODUCTOS_ORDENADOS INTO ID, NOMBRE;\n        EXIT WHEN PRODUCTOS_ORDENADOS%NOTFOUND;\n        DBMS_OUTPUT.PUT_LINE(ID || ':' || NOMBRE);\n    END LOOP;\nEND;\n/\n", "ej_define": "DEFINE nombre=user_tab_cols;\nselect * from &nombre;", "ej_procedure": "CREATE OR REPLACE PROCEDURE calculo\nIS\n    nombre VARCHAR2(64);\nBEGIN\n    nombre := 'msg';\n    DBMS_OUTPUT.PUT_LINE(nombre);\nEND;\n/", "exec": "EXEC @;", "execute": "EXECUTE @;", "execute_immediate": "EXECUTE IMMEDIATE '@';", "exit": "EXIT;", "exit_if_error": "WHENEVER SQLERROR EXIT SQL.SQLCODE;", "exit_if_error_and_rollback": "WHENEVER SQLERROR EXIT SQL.SQLCODE ROLLBACK", "exit_if_error_rollback": "WHENEVER SQLERROR EXIT SQL.SQLCODE ROLLBACK", "exitiferror": "WHENEVER SQLERROR EXIT SQL.SQLCODE;", "ext": "EXIT;", "fetch_cursor": "FETCH @NOMBRE INTO @fields;", "find_table": "SELECT DISTINCT TABLE_NAME FROM USER_TAB_COLS where upper(TABLE_NAME) LIKE upper('%@%');", "for_cursor": "FOR @1 IN (SELECT * FROM @)\nLOOP\n	DBMS_OUTPUT.PUT_LINE(@1.@attr);\nEND LOOP;", "for_in": "for i in 1..n loop\n    @\nend loop;", "for_loop": "FOR @i IN @start..@end\nLOOP\n	@\nEND LOOP;", "goto": "GOTO @;", "grant_all": "GRANT ALL ON @tabla to @transaccion;", "grant_create_directory": "GRANT CREATE ANY DIRECTORY TO @USER;", "grant_delete": "GRANT DELETE ON @tabla to @role;", "grant_execute": "GRANT EXECUTE ON @object TO @user;", "grant_insert": "GRANT INSERT ON @TABLA TO @TRANSACCION;", "grant_select": "GRANT SELECT ON @table TO @role;", "grant_update": "GRANT UPDATE ON @tabla(@columns) to @role;", "group_by": "GROUP BY", "if": "IF @\nTHEN \n	@\nEND IF;", "if_else": "IF @\nTHEN \n	@\nELSE \n	@\nEND IF;", "if_elsif": "IF @\nTHEN\n    @\nELSIF @ \nTHEN\n    @\nELSE\n    @\nEND IF;", "initcap": "initcap(@column)", "inner_join": "INNER JOIN @ ON @=@", "input": "&@VarName ", "insert_into": "insert into @table values(@values);", "is": "IS @", "length": "length(@column)", "log": "set echo on;\nSPOOL @filepath;", "loop": "LOOP\n	@\n	EXIT WHEN @;\nEND LOOP;", "lower": "lower(@column)", "max": "MAX(@)", "min": "MIN(@)", "mod": "MOD(@value, @2);", "modify_column": "alter table @tabla modify (@column @type);", "months_between": "MONTHS_BETWEEN(@date, @date)", "new_varchar": "@nombre VARCHAR2(@);", "not_null": "NOT NULL", "not_null_column": "alter table @table modify (@column not null);", "null": "NULL", "null_column": "alter table @table modify (@column null);", "number": "NUMBER", "number10": "NUMBER(10)", "open_cursor": "OPEN @NOMBRE;", "plsql_version": "SELECT * FROM v\\$version;", "primary_key": "primary key", "print": "DBMS_OUTPUT.PUT_LINE('@');", "promedio": "AVG(@)", "rank": "rank() over(order by (@) desc)", "references": "references @tablename(@id)", "rename_column": "ALTER TABLE FINANCIADOR RENAME COLUMN @OLD TO @NEW;", "rename_table": "RENAME @TABLA TO @TABLA;", "revoke_execute": "REVOKE EXECUTE ON object TO user;", "rollup": "GROUP BY ROLLUP(@)", "round": "ROUND(@NUMBER)", "rowtype": "@name @table%ROWTYPE;", "select": "select @* from @table;", "select_count": "select count(*) from @table;", "select_into": "SELECT COUNT(*) INTO @ FROM @;", "select_where": "select @* from @table where @condition;", "setautocommit": "set autocommit on;", "setautotrace": "set autotrace on;", "setlinesize": "set LINESIZE @many ", "setserveroutput": "SET SERVEROUTPUT ON", "setvariable": "exec :@variable := @value;", "setwrap": "set wrap on;", "show_error": "show errors;", "show_error_for": "show errors @type @nameObject;", "show_table_columns": "SELECT DISTINCT TABLE_NAME, COLUMN_NAME FROM USER_TAB_COLS order by TABLE_NAME;", "show_table_columns_type": "SELECT DISTINCT TABLE_NAME, COLUMN_NAME, DATA_TYPE FROM USER_TAB_COLS order by TABLE_NAME;", "show_tables": "SELECT DISTINCT TABLE_NAME FROM USER_TAB_COLS;", "show_tables_by_name": "SELECT DISTINCT TABLE_NAME FROM USER_TAB_COLS where upper(TABLE_NAME) like upper('%@%');", "show_triggers": "select * from all_triggers;", "show_triggers_by_table": "select * from all_triggers where upper(table_name) like upper('%@%');", "showall": "show all;", "showvariable": "PRINT :@variable:", "sleep": "DBMS_LOCK.sleep(@);", "spool": "SPOOL @filepath;", "sqrt": "SQRT(@number)", "start": "START @filename;", "stddev": "STDDEV(@)", "storage": "STORAGE(INITIAL @M \n    NEXT @M);", "strt": "SQRT(@number)", "substr": "substr(@columna, @inicio,@fin)", "subtype": "SUBTYPE @NAME IS @TYPE;", "sum": "SUM(@)", "sysdate": "SYSDATE ", "systimestamp": "SYSTIMESTAMP", "tag": "<<@>>", "timestamp": "TIMESTAMP(6)", "to_ate": "to_date('01/01/2000', 'DD/MM/YYYY')", "to_char_date": "to_char(SYSDATE, 'DD-MON-YYYY HH24:MI:SS')", "to_chart": "to_char(@column)", "to_date": "to_date('01/01/2000', 'DD/MM/YYYY')", "trigger_disable": "ALTER TRIGGER \"@triggerName\" disable;", "trigger_ditable": "ALTER TRIGGER \"@triggerName\" disable;", "trigger_enable": "ALTER TRIGGER \"@triggerName\" enable;", "type": "@name @varOrColumn%TYPE;", "unique": "UNIQUE", "update": "UPDATE @table SET @attr=@;", "update_replace": "UPDATE @ SET @2attr=REPLACE(@2attr, '@', '@');", "upper": "upper(@column)", "validar_soporte_xml": "SELECT STATUS, SCHEMA, COMP_NAME FROM DBA_REGISTRY WHERE COMP_NAME LIKE '%XML%';", "var": "VAR @nombre @tipo;", "varchar2": "VARCHAR2(@)", "variable": "VARIABLE @varname VARCHAR2(64);", "varianza": "variance(@)", "while": "WHILE @\nLOOP\n	@\nEND LOOP;", "xmltype": "XMLTYPE"}