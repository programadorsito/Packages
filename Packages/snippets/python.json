{"add_to_admin": "admin.site.register(@Model)", "change_port_cherrypy": "cherrypy.config.update({'server.socket_port': 2222})", "choices": "choices=((@value, \"@descripcion\")), default=@DeafultValue ", "class": "class @:\n	def @():\n		@", "command": "import sublime_plugin\nimport sublime\n\nclass @Command(sublime_plugin.TextCommand):\n    def run(self, edit):\n        @        ", "debug": "utils.d(\"@\")", "decimalfield": "DecimalField(decimal_places=@, max_digits=@)", "def": "def @(@):\n		@", "django_model": "class @ModelName(models.Model):\n    @attr=models.@Type ", "ej_comunicar_procesos": "import subprocess\nproc = subprocess.Popen('standalone',shell=True, stdin=subprocess.PIPE, stdout=subprocess.PIPE,stderr=subprocess.STDOUT)\n\nwhile True:\n#    proc.stdin.write('world\\n')\n    proc_read = proc.stdout.readline()\n    if proc_read:\n        print \"jaja : \"+ proc_read", "ej_get_arguments": "sys.argv[1]", "ej_lambda": "lambda x, y:cmp(len(x), len(y))", "ej_pygame_basic": "import sys\nimport pygame\n\npygame.init()\npantalla=pygame.display.set_mode((400,400))\n\nwhile True:\n    for e in pygame.event.get():\n        if e.type == pygame.locals.QUIT:\n            pygame.quit()\n            sys.exit()\n    pygame.display.update()", "ejemplo_render_to_response": "from django.shortcuts import render_to_response\ndef home(request):\n	return render_to_response(\"index.html\", {\"algo\":\"msg\"})", "ejemplo_template": "return django.http.HttpResponse(django.template.loader.get_template(\"index.html\").render(django.template.Context({\"algo\":\"msg aqui estoy\"})))", "eventlistener": "class @Listener(sublime_plugin.EventListener):\n	def on_query_completions(self, view, prefix, locations):\n		pass\n\n	def on_pre_save(self, view):\n		pass", "expose": "@cherrypy.expose~", "getview": "window=sublime.active_window()\nview=window.active_view()", "getwindow": "window=sublime.active_window()\nwindow.show_quick_panel(self.langs,self.seleccionarLenguaje)", "i++": "i+=1", "inc": "i+=1", "isMain": "if __name__ == \"__main__\":@", "is_main": "if __name__ == \"__main__\":@", "new_thread": "class @ClassName(threading.Thread):\n	def run(self):\n		@", "newcommand": "class @Command(sublime_plugin.TextCommand):\n    def run(self, edit):\n        pass", "on_close_listener": "class @Listener(sublime_plugin.EventListener):\n    def on_close(self, edit):\n", "open": "open(@)", "print": "print(\"@\")", "render_template": "render_template(\"@.html\", @params)", "route": "@app.route(\"/~\")", "start_thread": "@ClassName().start()", "str": "def __str__(self):\n    ", "textcommand": "class @Command(sublime_plugin.TextCommand):\n	def run(self, edit):\n		pass", "thread_method": "threading.Thread(target=@method).start()", "try": "try:\n    @\nexcept:\n    @", "url_for": "url_for(\"@\")"}